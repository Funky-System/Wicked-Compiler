section .data
@filename: data "test.wckd"
section .text

section .data
@global_0: var

section .text
jmp @import_processor_end
@import_processor:
locals.res 3
ld.reg %r0
map.getkeys
st.local 0
ld.int 0
st.local 1
ld.local 0
arr.len
st.local 2
@ip_loop:
  ld.local 1
  ld.local 2
  lt
  brfalse @ip_endloop
  ld.local 0
  ld.local 1
  ld.arrelem
  dup
  ld.int 0
  ld.int 1
  str.substr
  dup
  ld.str "@"
  eq
  brfalse @not_@
    jmp @ip_skip_rename
  @not_@:
  dup
  ld.str "f"
  eq
  brfalse @not_f
    # do nothing, keep ref
  @not_f:
  dup
  ld.str "c"
  eq
  brfalse @not_c
    ld.reg %r0
    ld.stack -2
    ld.mapitem.pop
    deref
    ld.reg %r0
    ld.stack -3
    st.mapitem.pop
  @not_c:
  dup
  ld.str "e"
  eq
  brfalse @not_e
    ld.reg %r0
    ld.stack -2
    ld.mapitem.pop
    deref
    ld.reg %r0
    ld.stack -3
    st.mapitem.pop
  @not_e:
  pop
  ld.reg %r0
  ld.stack -1
  dup
  ld.int 1
  ld.int -1
  str.substr
  map.renamekey.pop
  @ip_skip_rename: pop
  ld.local 1
  ld.int 1
  add
  st.local 1
  jmp @ip_loop
@ip_endloop:
ld.reg %r0
del.mapitem "@init"
locals.cleanup
ret
@import_processor_end:

section .data
@import_0: var
section .text
link "io"
dup
st.ref @import_0
dup
st.reg %r0
has.mapitem "@init"
brfalse @skip_init_@import_0
ld.reg %r0
ld.mapitem "@init"
call.pop 0
call @import_processor, 0
@skip_init_@import_0:
debug.setcontext @filename, 3, 0
ld.str "string"
st.ref @global_0
debug.setcontext @filename, 5, 0
debug.setcontext @filename, 7, 0
debug.setcontext @filename, 7, 0
ld.deref @import_0
debug.setcontext @filename, 7, 3
dup
ld.mapitem "print"
ld.str "value: "
debug.setcontext @filename, 7, 21
ld.deref @global_0
ld.int 1
ld.int 7
arr.slice
add
ld.str "\n"
add
ld.stack -2
st.reg %r1
ld.stack -1
call.pop 1
pop
pop
ld.reg %rr
pop
